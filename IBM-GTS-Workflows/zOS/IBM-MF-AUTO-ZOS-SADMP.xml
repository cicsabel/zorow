<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
/******************************************************************************/
/* Copyright Contributors to the zOS-Workflow Project.                        */
/* SPDX-License-Identifier: Apache-2.0                                        */
/******************************************************************************/
-->
<workflow>
    <autoTakeOwnership>true</autoTakeOwnership>
    <workflowSettingInfo>
        <variablesSetting isInstanceVariableWithoutPrefix="true"></variablesSetting>
    </workflowSettingInfo>
    <workflowInfo>
        <workflowID scope="none" isCallable="sysplex">IBM-MF-AUTO-ZOS-SADMP</workflowID>
        <workflowDescription>IBM-MF-AUTO-ZOS-SADMP</workflowDescription>
        <workflowVersion>1.0</workflowVersion>
        <vendor>IBM-MF-AUTO</vendor>
        <General/>
    </workflowInfo>
    <variable name="ucb1" scope="instance" visibility="private">
        <label>ucb For Device 1</label>
        <abstract>This is the device address i,e (0AA1)</abstract>
        <description>Please enter a 4 character for the first disk</description>
        <category>SADMP UCB</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>^[a-fA-F0-9]{4}</regularExpression>
            <errorMessage>Please enter the ucb as a 4 character HEX string</errorMessage>
        </string>
    </variable>
    <variable name="ucb2" scope="instance" visibility="private">
        <label>ucb For Device 2:</label>
        <abstract>This is the device address i,e (0AA2)</abstract>
        <description>Please enter a 4 character for the first disk</description>
        <category>SADMP UCB</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>^[a-fA-F0-9]{4}</regularExpression>
            <errorMessage>Please enter the ucb as a 4 character HEX string</errorMessage>
        </string>
    </variable>
    <variable name="ucb3" scope="instance" visibility="private">
        <label>ucb For Device 3</label>
        <abstract>This is the device address i,e (0AA3)</abstract>
        <description>Please enter a 4 character for the first disk</description>
        <category>SADMP UCB</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>^[a-fA-F0-9]{4}</regularExpression>
            <errorMessage>Please enter the ucb as a 4 character HEX string</errorMessage>
        </string>
    </variable>
    <variable name="ucb4" scope="instance" visibility="private">
        <label>ucb For Device 4</label>
        <abstract>This is the device address i,e (0AA4)</abstract>
        <description>Please enter a 4 character for the first disk</description>
        <category>SADMP UCB</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>^[a-fA-F0-9]{4}</regularExpression>
            <errorMessage>Please enter the ucb as a 4 character HEX string</errorMessage>
        </string>
    </variable>
    <variable name="ucb5" scope="instance" visibility="private">
        <label>ucb For Device 5</label>
        <abstract>This is the device address i,e (0AA5)</abstract>
        <description>Please enter a 4 character for the first disk</description>
        <category>SADMP UCB</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>^[a-fA-F0-9]{4}</regularExpression>
            <errorMessage>Please enter the ucb as a 4 character HEX string</errorMessage>
        </string>
    </variable>
    <variable name="vol1" scope="instance" visibility="private">
        <label>Please enter VOLSER for device 1</label>
        <abstract>I.E SADMP1</abstract>
        <description>This volume will house the 1st disk for your SADMP Configuration along with the stripe data</description>
        <category>SADMP VOL</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>VOLSER</validationType>
        </string>
    </variable>
    <variable name="vol2" scope="instance" visibility="private">
        <label>Please enter VOLSER for device 2</label>
        <abstract>I.E SADMP1</abstract>
        <description>This volume will VOLSERVOLSERhouse the 2nd disk for your SADMP Configuration</description>
        <category>SADMP VOL</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>VOLSER</validationType>
        </string>
    </variable>
    <variable name="vol3" scope="instance" visibility="private">
        <label>Please enter VOLSER for device 3</label>
        <abstract>I.E SADMP1</abstract>
        <description>This volume will house the 3rd disk for your SADMP Configuration</description>
        <category>SADMP VOL</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>VOLSER</validationType>
        </string>
    </variable>
    <variable name="vol4" scope="instance" visibility="private">
        <label>Please enter VOLSER for device 4</label>
        <abstract>I.E SADMP1</abstract>
        <description>This volume will house the 4th disk for your SADMP Configuration</description>
        <category>SADMP VOL</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>VOLSER</validationType>
        </string>
    </variable>
    <variable name="vol5" scope="instance" visibility="private">
        <label>Please enter VOLSER for device 5</label>
        <abstract>I.E SADMP1</abstract>
        <description>This volume will house the 5th disk for your SADMP Configuration</description>
        <category>SADMP VOL</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>VOLSER</validationType>
        </string>
    </variable>
    <variable name="sad_dsn" scope="instance" visibility="public">
        <label>Standalone Dump Dataset Name</label>
        <abstract>Please enter dataset name:</abstract>
        <description>A broadly used dataset name is SYS1.SADMP</description>
        <category>AMDSADDD Exec Options</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>DSNAME</validationType>
            <default>SYS1.SADMP</default>
        </string>
    </variable>
    <variable name="sad_exec_dsn" scope="instance" visibility="private">
        <label>Dataset for AMDSADDD</label>
        <abstract>Please enter the dataset where AMDSADDD resides</abstract>
        <description>Normally you can find the exec in SYS1.SBLSCLI0</description>
        <category>AMDSADDD Exec Options</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>DSNAME</validationType>
            <default>SYS1.SBLSCLI0</default>
        </string>
    </variable>
    <variable name="sad_ipl_vol" scope="instance" visibility="private">
        <label>SAD IPL Volume</label>
        <abstract>Please enter the VOLSER for the SAD IPL Text</abstract>
        <description>This is where SYS1.PAGEDUMP will be created
and the IPL Text will be written.</description>
        <category>AMDSADM2 Macro Options</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>VOLSER</validationType>
        </string>
    </variable>
    <variable name="sad_cons1" scope="instance" visibility="private">
        <label>Primary Console Device</label>
        <abstract>Please enter th HEX address for the master/primary console device</abstract>
        <description>This is the console that will receive the
messages for the SAD processing.</description>
        <category>AMDSADM2 Macro Options</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>^[0-9a-fA-F]{4}</regularExpression>
            <errorMessage>Please enter a 4 character value</errorMessage>
        </string>
    </variable>
    <variable name="sad_cons2" scope="instance" visibility="private">
        <label>Secondary Console Device</label>
        <abstract>Please enter th HEX address for the backup/secondary console device</abstract>
        <description>This is the console that will receive the
messages for the SAD processing in the event
the master is malfunctioning</description>
        <category>AMDSADM2 Macro Options</category>
        <string valueMustBeChoice="false" multiLine="false">
            <regularExpression>^[0-9a-fA-F]{4}</regularExpression>
            <errorMessage>Please enter a 4 character value</errorMessage>
        </string>
    </variable>
    <variable name="vol_concat" scope="instance" visibility="private">
        <label>Volume Concatenation</label>
        <abstract>Used to concat vols</abstract>
        <description>used to concat vols</description>
        <category>General</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>ALPHA</validationType>
        </string>
    </variable>
    <variable name="sad_dev_type" scope="instance" visibility="private">
        <label>Standalone Dump Device Type</label>
        <abstract>M3 / M9 / M27 / M54</abstract>
        <description>DASD Device types :
- 3390-3
- 3390-9
- 3390-27
- 3390-54</description>
        <category>AMDSADDD Exec Options</category>
        <string valueMustBeChoice="true" multiLine="false">
            <regularExpression>^3390-(3|9|27|54)</regularExpression>
            <errorMessage>Value Must be a Selection</errorMessage>
            <choice>3390-3</choice>
            <choice>3390-9</choice>
            <choice>3390-27</choice>
            <choice>3390-54</choice>
            <default>3390-9</default>
        </string>
    </variable>
    <variable name="ucb_concat" scope="instance" visibility="private">
        <label>UCB Concatenation</label>
        <abstract>Used to concat ucbs</abstract>
        <description>used to concat ucbs</description>
        <category>General</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>ALPHA</validationType>
        </string>
    </variable>
    <variable name="sad_dsn_cat" scope="instance" visibility="private">
        <label>Catalog</label>
        <abstract>Catalog SYS1.SADMP After complete</abstract>
        <description>Selecting this option will cause an IDCAMS
delete and a catalog against the dataset.</description>
        <category>AMDSADDD Exec Options</category>
        <string valueMustBeChoice="true" multiLine="false">
            <validationType>ALPHA</validationType>
            <choice>Y</choice>
            <choice>N</choice>
            <default>Y</default>
        </string>
    </variable>
    <atCreate name="sad_ipl_vol" scope="instance" required="true" prompt="true"/>
    <atCreate name="ucb1" scope="instance" required="true" prompt="true"/>
    <atCreate name="vol1" scope="instance" required="true" prompt="true"/>
    <atCreate name="sad_cons1" scope="instance" required="true" prompt="true"/>
    <atCreate name="sad_cons2" scope="instance" required="true" prompt="true"/>
    <atCreate name="sad_dsn" scope="instance" required="true" prompt="true"/>
    <atCreate name="sad_exec_dsn" scope="instance" required="true" prompt="true"/>
    <atCreate name="sad_dev_type" scope="instance" required="true" prompt="true"/>
    <atCreate name="sad_dsn_cat" scope="instance" required="true" prompt="true"/>
    <step name="INPUTVARS" optional="false">
        <title>Input Variables</title>
        <description>This step will 
- Get input from the user</description>
        <step name="INPUT" optional="false">
            <title>Input Variables</title>
            <description>&lt;h3&gt;Gather necessary information from the user&lt;/h3&gt;
&lt;br&gt;
This step will gather the folowing information from the user:&lt;br&gt;
&lt;ol&gt;
  &lt;li&gt;UCBs and VOLs for the Standalone dump datasets&lt;/li&gt;
  &lt;li&gt;The desired name for the SYS1.SADMP dataset&lt;/li&gt;
  &lt;li&gt;The dataste name where the REXX exec can be found&lt;/li&gt;
&lt;/ol&gt;
&lt;div style="background-color:red; color:white; padding:15px;"&gt;
This workflow is disruptive, it WILL initialize the disk volumes
&lt;/div&gt;</description>
            <variableValue name="sad_dev_type" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="sad_cons1" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="sad_cons2" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="sad_dsn" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="sad_exec_dsn" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="sad_ipl_vol" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="ucb1" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="ucb2" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="ucb3" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="ucb4" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="ucb5" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol1" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="vol2" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol3" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol4" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol5" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="sad_dsn_cat" scope="instance" noPromptIfSet="false" required="false"/>
            <instructions substitution="false">&lt;h3&gt;Gather necessary information from the user&lt;/h3&gt;
&lt;h6&gt;This is a input only step, it does not execute code&lt;/h6&gt;
&lt;br&gt;&lt;br&gt;

This step will gather the folowing information from the user:&lt;br&gt;

&lt;ol&gt;
  &lt;li&gt;UCBs and VOLs for the Standalone dump datasets&lt;/li&gt;
  &lt;li&gt;The desired name for the SYS1.SADMP dataset&lt;/li&gt;
  &lt;li&gt;The dataste name where the REXX exec can be found&lt;/li&gt;
&lt;/ol&gt;

&lt;br&gt; 
The workflow was customized for 5 volumes, if you are not going to use &lt;br&gt;
all five just leave the ones you are not going to use blank. &lt;br&gt; 

&lt;div style="background-color:red; color:white; padding:15px;"&gt;
This workflow is disruptive, it WILL initialize the disk volumes indicated in the list 
&lt;/div&gt;

If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha @LinkedIn&lt;/a&gt;</instructions>
            <weight>1</weight>
            <skills>z/OS Base</skills>
            <autoEnable>true</autoEnable>
            <canMarkAsFailed>false</canMarkAsFailed>
            <setVariable name="vol_concat" scope="instance" substitution="true">${vol1} ${vol2} ${vol3} ${vol4} ${vol5}</setVariable>
            <setVariable name="ucb_concat" scope="instance" substitution="true">${ucb1} ${ucb2} ${ucb3} ${ucb4} ${ucb5}</setVariable>
        </step>
    </step>
    <step name="INITDASD" optional="false">
        <title>Initialize Required Dasd</title>
        <description>This step will:
- Vary the devices off
- Initialize the devices 
- Vary the devices on</description>
        <step name="VARYOFF" optional="false">
            <title>Vary Offline</title>
            <description>&lt;h3&gt;Step to Vary a DASD Pack Offline&lt;/h3&gt;
&lt;h6&gt;This step can be used to bring a UCB Off&lt;/h6&gt;
&lt;br&gt;&lt;br&gt;

The step will vary a device offline and check if the device was &lt;br&gt;
successfully brought offline, it will attempt to retry as many  &lt;br&gt;
times as defined on the retry limit variable &lt;br&gt;&lt;br&gt;

If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha @LinkedIn&lt;/a&gt;</description>
            <prereqStep name="INPUT"/>
            <variableValue name="ucb1" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="ucb2" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="ucb3" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="ucb4" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="ucb5" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol1" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol2" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol3" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol4" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol5" scope="instance" noPromptIfSet="false" required="false"/>
            <instructions substitution="false">&lt;h3&gt;Step to Vary a DASD Pack Offline&lt;/h3&gt;
&lt;h6&gt;This step can be used to bring a UCB Off&lt;/h6&gt;
&lt;br&gt;&lt;br&gt;

The step will vary a device offline and check if the device was &lt;br&gt;
successfully brought offline, it will attempt to retry as many  &lt;br&gt;
times as defined on the retry limit variable &lt;br&gt;&lt;br&gt;

If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha @LinkedIn&lt;/a&gt;</instructions>
            <weight>1</weight>
            <skills>z/OS Base</skills>
            <autoEnable>true</autoEnable>
            <canMarkAsFailed>false</canMarkAsFailed>
            <template>
                <inlineTemplate substitution="true">/*rexx*/ 
/*retry limit*/ 
rl=3 
                                                                     
ucblist="${ucb_concat.trim()}"
                                                                     
do j=1 to words(ucblist) 
   call varyoff word(ucblist,j) 
end 
exit 
                                                                     
varyoff: 
parse arg ucb 
erc=0 
/*guarantee uppercase*/ 
ucb=translate(ucb) 
do i=1 to rl 
   call syscmd 'v '||ucb||',offline' 
   if pos('OFFLINE',line.1) &gt; 0 then do 
      erc = 0 
      say 'DASDINIT01I - UCB OFFLINE' 
      say line.1 
      leave 
   end 
   else do 
      say 'DASDINIT01W - UCB NOT OFFLINE - RETRYING '||i||' of '||rl 
      erc = 8 
   end 
end 
if erc=8 then say "DASDINIT01E - UCB COULD NOT BE VARIED OFFLINE" 
return 8 
                                                                     
syscmd: 
  parse arg cmd 
  x=msg('off') 
  'CONSOLE DEACTIVATE' 
  x=msg('off') 
  'CONSOLE NAME('SYSVAR(SYSUID)||'@) ACTIVATE' 
  'CONSOLE SYSCMD('cmd')' 
  msgs = GETMSG('line.','SOL',,,10) 
  'CONSOLE DEACTIVATE' 
  return 
</inlineTemplate>
                <submitAs maxRc="0">TSO-REXX-JCL</submitAs>
                <maxLrecl>80</maxLrecl>
            </template>
        </step>
        <step name="DASDINIT" optional="false">
            <title>Format/Init DASD Pack</title>
            <description>&lt;h3&gt;Step to INIT / Format a DASD Pack&lt;/h3&gt;
&lt;h6&gt;This step can be used to format a DASD pack&lt;/h6&gt;
&lt;br&gt;&lt;br&gt;

The DASD will be initialized with the default of: &lt;br&gt;&lt;br&gt;

VTOC(0,1,59) and INDEX(4,0,15) &lt;br&gt;&lt;br&gt;

You can edit the JCL to add more devices and change the &lt;br&gt;
defaults if needed.
&lt;br&gt;&lt;br&gt;
If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha @LinkedIn&lt;/a&gt;</description>
            <prereqStep name="VARYOFF"/>
            <variableValue name="ucb1" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="ucb2" scope="instance" noPromptIfSet="true" required="false"/>
            <variableValue name="ucb3" scope="instance" noPromptIfSet="true" required="false"/>
            <variableValue name="ucb4" scope="instance" noPromptIfSet="true" required="false"/>
            <variableValue name="ucb5" scope="instance" noPromptIfSet="true" required="false"/>
            <variableValue name="vol1" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="vol2" scope="instance" noPromptIfSet="true" required="false"/>
            <variableValue name="vol3" scope="instance" noPromptIfSet="true" required="false"/>
            <variableValue name="vol4" scope="instance" noPromptIfSet="true" required="false"/>
            <variableValue name="vol5" scope="instance" noPromptIfSet="true" required="false"/>
            <instructions substitution="false">&lt;h3&gt;Step to INIT / Format a DASD Pack&lt;/h3&gt;
&lt;h6&gt;This step can be used to format a DASD pack&lt;/h6&gt;
&lt;br&gt;&lt;br&gt;

The DASD will be initialized with the default of: &lt;br&gt;&lt;br&gt;

VTOC(0,1,59) and INDEX(4,0,15) &lt;br&gt;&lt;br&gt;

You can edit the JCL to add more devices and change the &lt;br&gt;
defaults if needed.
&lt;br&gt;&lt;br&gt;
If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha @LinkedIn&lt;/a&gt;</instructions>
            <weight>1</weight>
            <skills>z/OS Base, Storage</skills>
            <autoEnable>true</autoEnable>
            <canMarkAsFailed>true</canMarkAsFailed>
            <template>
                <inlineTemplate substitution="true">//INITVOL  EXEC PGM=ICKDSF,PARM='NOREPLYU'
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD *
#if (${ucb1} != "") 
  INIT UNIT(${ucb1}) VFY(${vol1}) VOLID(${vol1}) VTOC(0,1,59) INDEX(4,0,15)
#end
#if (${ucb2} != "") 
  INIT UNIT(${ucb2}) VFY(${vol2}) VOLID(${vol2}) VTOC(0,1,59) INDEX(4,0,15)
#end
#if (${ucb3} != "") 
  INIT UNIT(${ucb3}) VFY(${vol3}) VOLID(${vol3}) VTOC(0,1,59) INDEX(4,0,15)
#end
#if (${ucb4} != "") 
  INIT UNIT(${ucb4}) VFY(${vol4}) VOLID(${vol4}) VTOC(0,1,59) INDEX(4,0,15)
#end
#if (${ucb5} != "") 
  INIT UNIT(${ucb5}) VFY(${vol5}) VOLID(${vol5}) VTOC(0,1,59) INDEX(4,0,15)
#end
/*</inlineTemplate>
                <submitAs maxRc="0">JCL</submitAs>
                <maxLrecl>80</maxLrecl>
            </template>
        </step>
        <step name="VARYON" optional="false">
            <title>Vary Online</title>
            <description>&lt;h3&gt;Step to Vary a DASD Pack online&lt;/h3&gt;
&lt;h6&gt;This step can be used to bring a UCB Online&lt;/h6&gt;
&lt;br&gt;&lt;br&gt;

The step will vary a device Online and check if the device was &lt;br&gt;
successfully brought Online, it will attempt to retry as many  &lt;br&gt;
times as defined on the retry limit variable.                  &lt;br&gt; 

If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha </description>
            <prereqStep name="DASDINIT"/>
            <variableValue name="ucb1" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="ucb2" scope="instance" noPromptIfSet="true" required="false"/>
            <variableValue name="ucb3" scope="instance" noPromptIfSet="true" required="false"/>
            <variableValue name="ucb4" scope="instance" noPromptIfSet="true" required="false"/>
            <variableValue name="ucb5" scope="instance" noPromptIfSet="true" required="false"/>
            <instructions substitution="false">&lt;h3&gt;Step to Vary a DASD Pack online&lt;/h3&gt;
&lt;h6&gt;This step can be used to bring a UCB Online&lt;/h6&gt;
&lt;br&gt;&lt;br&gt;

The step will vary a device Online and check if the device was &lt;br&gt;
successfully brought Online, it will attempt to retry as many  &lt;br&gt;
times as defined on the retry limit variable.                  &lt;br&gt; 

If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha @LinkedIn&lt;/a&gt;</instructions>
            <weight>1</weight>
            <skills>z/OS Base</skills>
            <autoEnable>true</autoEnable>
            <canMarkAsFailed>true</canMarkAsFailed>
            <template>
                <inlineTemplate substitution="true">/*rexx*/ 
/*retry limit*/ 
rl=3 
                                                                     
ucblist="${ucb_concat.trim()}"
                                                                     
do j=1 to words(ucblist) 
   call varyoff word(ucblist,j) 
end 
exit 
                                                                     
varyoff: 
parse arg ucb 
erc=0 
/*guarantee uppercase*/ 
ucb=translate(ucb) 
do i=1 to rl 
   call syscmd 'v '||ucb||',online' 
   if pos('ONLINE',line.1) &gt; 0 then do 
      erc = 0 
      say 'DASDINIT01I - UCB ONLINE' 
      say line.1 
      leave 
   end 
   else do 
      say 'DASDINIT01W - UCB NOT ONLINE - RETRYING '||i||' of '||rl 
      erc = 8 
   end 
end 
if erc=8 then say "DASDINIT01E - UCB COULD NOT BE VARIED ONLINE" 
return 8 
                                                                     
syscmd: 
  parse arg cmd 
  x=msg('off') 
  'CONSOLE DEACTIVATE' 
  x=msg('off') 
  'CONSOLE NAME('SYSVAR(SYSUID)||'@) ACTIVATE' 
  'CONSOLE SYSCMD('cmd')' 
  msgs = GETMSG('line.','SOL',,,10) 
  'CONSOLE DEACTIVATE' 
  return 
</inlineTemplate>
                <submitAs maxRc="0">TSO-REXX-JCL</submitAs>
                <maxLrecl>80</maxLrecl>
            </template>
        </step>
    </step>
    <step name="SADBUILD" optional="false">
        <title>Build SADMP and IPL Text</title>
        <description>This step will 
- Create the SYS1.SADMP Dataset
- Build the SAD Program
- Write IPL Text</description>
        <step name="SADALLOC" optional="false">
            <title>Allocate SYS1.SADMP</title>
            <description>&lt;h3&gt;Allocate / Reallocate the SYS1.SADMP Stripe Dataset&lt;/h3&gt;
&lt;br&gt;&lt;br&gt;

This step will do the following based on the user input:&lt;br&gt;

&lt;ol&gt;
  &lt;li&gt;Delete the SYS1.SADMP dataset with NSCR if CATALOG=Y was selected&lt;/li&gt;
  &lt;li&gt;Create and initialize a new SYS1.SADMP stripe dataset&lt;/li&gt;
&lt;/ol&gt;

If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha @LinkedIn&lt;/a&gt;</description>
            <prereqStep name="VARYON"/>
            <variableValue name="vol1" scope="instance" noPromptIfSet="true" required="true"/>
            <variableValue name="vol2" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol3" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol4" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="vol5" scope="instance" noPromptIfSet="false" required="false"/>
            <instructions substitution="true">&lt;h3&gt;Allocate / Reallocate the SYS1.SADMP Stripe Dataset&lt;/h3&gt;
&lt;br&gt;&lt;br&gt;

This step will do the following based on the user input:&lt;br&gt;

&lt;ol&gt;
  &lt;li&gt;Delete the SYS1.SADMP dataset with NSCR if CATALOG=Y was selected&lt;/li&gt;
  &lt;li&gt;Create and initialize a new SYS1.SADMP stripe dataset&lt;/li&gt;
&lt;/ol&gt;

If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha @LinkedIn&lt;/a&gt;</instructions>
            <weight>1</weight>
            <skills>z/OS Base</skills>
            <autoEnable>true</autoEnable>
            <canMarkAsFailed>false</canMarkAsFailed>
            <template>
                <inlineTemplate substitution="true">//*------------------------------------------------------------------*
//* This sample can be used to initialize the SYS1.SADMP stripe 
//* dataset, bear in mind if you are going to use this dataset 
//* in a sysplex environment and different master catalogs, you 
//* will need to catalog the dataset in all different master cats 
//*------------------------------------------------------------------*
#if (${sad_dsn_cat} == "Y")
//DELETE   EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE ${sad_dsn} NSCR
 SET MAXCC=0
/*
#end
//AMDSADDD EXEC PGM=IKJEFT01,REGION=64M 
//SYSTSPRT DD   SYSOUT=* 
//SYSTSIN  DD   * 
#set ($vc = ${vol_concat.trim()})
#set ($vc = $vc.replaceAll(" ",","))
EXEC '${sad_exec_dsn}(AMDSADDD)' + 
'REALLOC ($vc)+
(${sad_dsn}) 3390 +
#if (${sad_dev_type} == "3390-3")
3330 +
#end
#if (${sad_dev_type} == "3390-9")
10010 +
#end
#if (${sad_dev_type} == "3390-27")
32750 +
#end
#if (${sad_dev_type} == "3390-54")
65510 +
#end
${sad_dsn_cat}' 
/* 
</inlineTemplate>
                <submitAs maxRc="0">JCL</submitAs>
                <maxLrecl>80</maxLrecl>
            </template>
        </step>
        <step name="IPLDBUILD" optional="false">
            <title>Build PGM and write IPL Text</title>
            <description>&lt;h3&gt;Build the SAD Program&lt;/h3&gt;
&lt;br&gt;&lt;br&gt;

This step will do the following based on the user input:&lt;br&gt;

&lt;ol&gt;
  &lt;li&gt;Delete the current SYS1.PAGEDUMP.Vxxxxxx&lt;/li&gt;
  &lt;li&gt;Build a new SAD IPLable Program&lt;/li&gt;
  &lt;li&gt;Write the new program to SYS1.PAGEDUMP.xxxxxx&lt;/li&gt;
  &lt;li&gt;Write the SAD IPL Text&lt;/li&gt;
&lt;/ol&gt;

If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha @Linke</description>
            <prereqStep name="SADALLOC"/>
            <variableValue name="sad_exec_dsn" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="sad_ipl_vol" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="sad_cons1" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="sad_cons2" scope="instance" noPromptIfSet="false" required="false"/>
            <variableValue name="ucb1" scope="instance" noPromptIfSet="false" required="false"/>
            <instructions substitution="true">&lt;h3&gt;Build the SAD Program&lt;/h3&gt;
&lt;br&gt;&lt;br&gt;

This step will do the following based on the user input:&lt;br&gt;

&lt;ol&gt;
  &lt;li&gt;Delete the current SYS1.PAGEDUMP.V${vol1}&lt;/li&gt;
  &lt;li&gt;Build a new SAD IPLable Program&lt;/li&gt;
  &lt;li&gt;Write the new program to SYS1.PAGEDUMP.V${vol1}&lt;/li&gt;
  &lt;li&gt;Write the SAD IPL Text&lt;/li&gt;
&lt;/ol&gt;

If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo Rocha @LinkedIn&lt;/a&gt;</instructions>
            <weight>1</weight>
            <skills>z/OS Base</skills>
            <autoEnable>true</autoEnable>
            <canMarkAsFailed>false</canMarkAsFailed>
            <template>
                <inlineTemplate substitution="true">//*------------------------------------------------------------------*
//* This sample can be used to build the StandAlone Program that
//* has the AUTOSAD statements, meaning no prompts or interrupts
//* are needed as long as the loadparm is set to SOxxxx where xxxx
//* is your primary NIP console
//*------------------------------------------------------------------*
//SCRATCH  EXEC PGM=IEHPROGM
//SYSPRINT DD SYSOUT=*
//PAGEDUMP DD  UNIT=SYSALLDA,DISP=SHR,DSN=SYS1.PAGEDUMP.V${sad_ipl_vol},
//            VOL=SER=${sad_ipl_vol}                &lt;--- VOLSER ---
//SYSIN    DD *                                          ||||||
 SCRATCH VOL=SYSALLDA=${sad_ipl_vol},PURGE,DSNAME=SYS1.PAGEDUMP.V${sad_ipl_vol}
//*-------------------------------------------------------------------*
//ASM      EXEC PGM=ASMA90,COND=(8,LT,SCRATCH),
//            PARM='DECK,NORENT,NOOBJECT,NOXOBJECT,XREF(SHORT),TERM'
//SYSLIB   DD DSN=SYS1.MODGEN,
//            UNIT=SYSALLDA,DISP=SHR
//SYSUT1   DD SPACE=(1700,(400,50)),
//            UNIT=SYSALLDA
//SYSTERM  DD SYSOUT=*
//SYSPRINT DD DUMMY
//SYSPUNCH DD DSN=&amp;OBJ,UNIT=SYSALLDA,
//            DCB=BLKSIZE=3360,
//            SPACE=(80,(250,50)),DISP=(,PASS)
//SYSIN    DD *
        TITLE 'STAND-ALONE DUMP PROGRAM'
*---------------------------------------------------------------------*
*                                                                     *
*  MACRO 'AMDSADMP' IS DOCUMENTED IN THE IBM 'SERVICE AIDS' MANUAL.   *
*  IT GENERATES A JOBSTREAM SIMILAR TO THIS ONE.  THIS JOB ENABLES    *
*  THE GENERATION OF A NEW STAND-ALONE DUMP PROGRAM IN ONE STAGE      *
*  RATHER THAN TWO.                                                   *
*                                                                     *
*  PARAMETER DESCRIPTIONS:                                            *
*                                                                     *
*  O  IPL=D                  DEVICE TYPE OF SADUMP RESIDENCE VOLUME.  *
*                                                                     *
*  O  CONSOLE=((DEVN,TYPE))  CONSOLE ADDRESSES AND DEVICE TYPES.      *
*                                                                     *
*  O  MSG=ALL                ALL    - ALL SADUMP MESSAGES ON CONSOLE. *
*                                                                     *
*        |ALLASIDS           ALLASIDS - SAME AS 'ALL' PLUS AMD010I.   *
*                                                                     *
*        |ACTION             ACTION - SADUMP ACTION MESSAGES ONLY.    *
*                                                                     *
*  O  COMPACT=YES|NO         YES    - COMPACT DATA USING IDRC.        *
*                                                                     *
*  O  MINASID=ALL            ALL    - DUMP ALL ADDRESS SPACES.        *
*                                                                     *
*            |PHYSIN         PHYSIN - DUMP PHYSICALLY SWAPPED-IN      *
*                                     ADDRESS SPACES ONLY.            *
*                                                                     *
*  O  REAL=ALL               ALL    - DUMP ALL REAL STORAGE.       210*
*                                                                     *
*         |USED              USED   - DUMP USED REAL STORAGE.      210*
*                                                                     *
*  O  REUSEDS=CHOICE         CHOICE - PROMPT OPERATOR FOR REUSE OF    *
*                                     A SYS1.SADMP DASD DATA SET.     *
*                                                                     *
*            |ALWAYS         ALWAYS - CAN ALWAYS REUSE SYS1.SADMP.    *
*                                                                     *
*            |NEVER          NEVER  - CAN NEVER REUSE SYS1.SADMP      *
*                                     UNTIL DATA SET IS CLEARED.      *
*                                                                     *
*  O  DDSPROMPT=YES|NO       YES    - PROMPT FOR OUTPUT DUMP DATA     *
*                                     SET NAME WHEN DASD SADUMP.      *
*                                                                     *
*  O  AMD029=YES|NO          YES    - IF 'AMD029=NO' IS SPECIFIED,    *
*                                     SADMP DOES NOT ISSUE AMD029D    *
*                                     WHEN A 3270 CONSOLE SCREEN      *
*                                     BECOMES FULL. SADMP BEHAVES     *
*                                     AS IF OPERATOR HAD REPLIED      *
*                                     NO TO AMD029D. THE AMD029       *
*                                     KEYWORD IS MEANINGLESS WHEN     *
*                                     THE SYSTEM CONSOLE IS USED,     *
*                                     BECAUSE AMD029D IS NEVER        *
*                                     ISSUED FOR A SYSTEM CONSOLE.    *
*                                                                     *
*  O  ADDSUMM=('OPTIONS')           - THE MAXIMUM ADD SUMMARY         *
*                                     LENGTH IS 255 CHARACTERS.       *
*                                     SEE 'SERVICE AIDS' MANUAL.      *
*                                                                     *
*  O  DUMP=('OPTIONS')              - THE MAXIMUM DUMP OPTIONS        *
*                                     LENGTH IS 255 CHARACTERS.       *
*                                     SEE 'SERVICE AIDS' MANUAL.      *
*                                                                     *
*  O  OUTPUT=TDEVN           TDEVN  - DEFAULT TAPE DEVICE NUMBER      *
*                                     FOR THE SADUMP OUTPUT.          *
*                                                                     *
*            DDEVN           DDEVN  - DEFAULT DASD DEVICE NUMBER      *
*                                     FOR THE SADUMP OUTPUT.          *
*                                                                     *
*           (DDEVN,DSNAME)   DDEVN  - DEFAULT DASD DEVICE NUMBER      *
*                                     FOR THE SADUMP OUTPUT.          *
*                                                                     *
*                            DSNAME - DEFAULT SADMP DATA SET NAME.    *
*                                                                     *
*  O  PROMPT                 SADUMP IS TO PROMPT THE OPERATOR FOR     *
*                            ADDITIONAL STORAGE TO BE DUMPED.         *
*                                                                     *
*---------------------------------------------------------------------*
*                       DEVN        DEVN                 VERIFY
         AMDSADM2 IPL=D, ||||        ||||                 DEVN FOR     X
               CONSOLE=((${sad_cons1},3278),(${sad_cons2},3278)),   &lt;---- CONSOLES     X
               MSG=ALLASIDS,                                           X
               COMPACT=YES,                                            X
               MINASID=ALL,                                            X
               REUSEDS=ALWAYS,                                         X
               DDSPROMPT=NO,                                           X
               AMD029=NO,                                              X
               DUMP=('SP(ALL) IN ASID(1,'JESXCF','JES2') ALSO HIGH VIRTX
               UAL IN ASID(ALL)'),                                     X
               OUTPUT=(D${ucb1},${sad_dsn})            &lt;---- DASD DEVICE
         END
/*
//*-------------------------------------------------------------------*
//BUILD    EXEC PGM=AMDSABLD,COND=(0,NE,ASM),
//            PARM='IPL=D'
//STEPLIB  DD DSN=SYS1.LINKLIB,
//            UNIT=SYSALLDA,DISP=SHR
//IPLDEV   DD DSN=SYS1.PAGEDUMP.V${sad_ipl_vol},
//            VOL=SER=${sad_ipl_vol},
//            UNIT=SYSALLDA,DISP=(NEW,KEEP),
//            SPACE=(4096,(1095),,CONTIG),LABEL=EXPDT=99366,
//            DCB=(LRECL=4096,BLKSIZE=4096,RECFM=F,DSORG=PS)
//TRK0TEXT DD DSN=&amp;TRK0TEXT,
//            VOL=SER=${sad_ipl_vol},
//            UNIT=SYSALLDA,DISP=(NEW,PASS),
//            SPACE=(4096,(2,1)),DCB=RECFM=U
//SYSPRINT DD SYSOUT=*
//SYSPUNCH DD DSN=&amp;OBJ,DISP=(OLD,DELETE)
//IPLTEXT  DD DSN=SYS1.NUCLEUS(AMDSAIPD),
//            UNIT=SYSALLDA,DISP=SHR
//IPITEXT  DD DSN=SYS1.NUCLEUS(AMDSAIPI),
//            UNIT=SYSALLDA,DISP=SHR
//DVITEXT  DD DSN=SYS1.NUCLEUS(AMDSADVI),
//            UNIT=SYSALLDA,DISP=SHR
//DPLTEXT  DD DSN=SYS1.NUCLEUS(AMDSADPL),
//            UNIT=SYSALLDA,DISP=SHR
//PGETEXT  DD DSN=SYS1.NUCLEUS(AMDSAPGE),
//            UNIT=SYSALLDA,DISP=SHR
//*-------------------------------------------------------------------*
//*                                                                   *
//*        THIS STEP WRITES THE NEW SADUMP IPL TEXT.                  *
//*                                                                   *
//*-------------------------------------------------------------------*
//PUTIPL   EXEC PGM=ICKDSF,PARM='NOREPLYU',REGION=8M,
//            COND=((0,NE,ASM),(0,NE,BUILD))
//STEPLIB  DD DSN=SYS1.LINKLIB,
//            UNIT=SYSALLDA,DISP=SHR
//NOTIFY#  DD DUMMY
//SYSPRINT DD SYSOUT=*
//IPLDEV DD  UNIT=SYSALLDA,DISP=OLD,DSN=SYS1.PAGEDUMP.V${sad_ipl_vol},
//            VOL=SER=${sad_ipl_vol}
//TRK0TEXT DD DSN=&amp;TRK0TEXT,DISP=(OLD,DELETE)
//SYSIN    DD *
 REFORMAT DDNAME(IPLDEV) NOPURGE IPL(TRK0TEXT,ABS) NOVERIFY -
          BOOTSTRAP IPLTXTEXIST
/*
</inlineTemplate>
                <submitAs maxRc="8">JCL</submitAs>
                <maxLrecl>80</maxLrecl>
            </template>
        </step>
    </step>
</workflow>
