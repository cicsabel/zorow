<?xml version="1.0" encoding="UTF-8"?>
<!-- Declare external file containing WAS variables referenced in the following steps -->
<!DOCTYPE workflow [<!ENTITY variables SYSTEM "variable_imports.xml">
                    ]> 
                    
<!--
/******************************************************************************/
/* Copyright Contributors to the zOS-Workflow Project.                        */
/* SPDX-License-Identifier: Apache-2.0                                        */
/******************************************************************************/
-->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                          xsi:noNamespaceSchemaLocation="../workflow/schemas/workflow_v1.xsd">    
    <!--  Note: The schema workflow_v1.xsd is shipped with z/OSMF. To use the schema
          to validate this XML, modify the above schema location to point to the 
          schema in z/OSMF, or copy the schema to an appropriate location.  -->

<!-- 
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
 	+  EKMF Web Deprovision: Deprovision user ids and groups                          +
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
-->

  <workflowInfo>
      <workflowID>ekmfusers_Deprovision</workflowID>
      <workflowDescription>Deprovision an EKMF Web server.</workflowDescription>
    <workflowVersion>1.0.0.0</workflowVersion>
      <vendor>IBM</vendor>
      <Provisioning>
          <productID>5655-EKM</productID>
          <productName>EKMF Web</productName>
          <productVersion>V2R1+</productVersion>
          <softwareType>EKMFUsers</softwareType>
      </Provisioning>
  </workflowInfo>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--     Include WAS variables used by the following steps -->
	<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	&variables;

    <!--++++++++++++++++++++++-->
    <!--   Deprovision Steps  -->
    <!--++++++++++++++++++++++-->

    <step name="removeSAFSecurityProfiles">
        <title>Remove SAF security profiles</title>
        <description>Remove SAF security profiles created by this workflow</description>
        <runAsUser substitution="true">$!{instance-EKMF_ADMIN_SECURITY}</runAsUser>
	    <approver substitution="true">$!{instance-EKMF_APPROVER_SECURITY}</approver>
        <condition>
           <expression><![CDATA["1" == "1"]]></expression>
           <description>Should the step be executed if an APPLID has been set</description>
           <targetStateSet>
               <description>Only execute if an validation has been passed</description>
               <extendStateExpression>
                   <description>Skip if EKMF_TEMPLATE_VALIDATION_PASSED is false</description>
                   <expression><![CDATA[ ${instance-EKMF_TEMPLATE_VALIDATION_PASSED} == "false" && ${instance-VALIDATE_PARAMETERS} == "YES" ]]></expression>
                   <targetState>Skipped</targetState>
               </extendStateExpression>
           </targetStateSet>
        </condition>
        <instructions substitution="true">Delete the appropriate SAF profiles created by this workflow</instructions>
        <weight>1</weight>
        <autoEnable>true</autoEnable>
       	<template>
           	<fileTemplate substitution="true">extensions/deleteSecurity.rexx</fileTemplate>
           	<submitAs maxRc="0">TSO-REXX-JCL</submitAs>
           	<maxLrecl>1024</maxLrecl>
       	</template>
    </step>

    <step name="deleteUserhome">
        <title>Delete and unmount user home</title>
        <description>If created, delete and unmount the home directories for temp users</description>
        <runAsUser substitution="true">$!{instance-EKMF_ADMIN_ZFS}</runAsUser>
        <approver substitution="true">$!{instance-EKMF_APPROVER_ZFS}</approver>
        <condition>
            <expression><![CDATA["1" == "1"]]></expression>
            <description>Should the step be executed if an APPLID has been set</description>
            <targetStateSet>
                <description>Only execute if user ids were generated</description>
                <extendStateExpression>
                    <description>Skip if EKMF_CREATE_USERIDS is false</description>
                    <expression><![CDATA[ ${instance-EKMF_CREATE_USERIDS} == "false"]]></expression>
                    <targetState>Skipped</targetState>
                </extendStateExpression>
            </targetStateSet>
        </condition>
        <instructions substitution="true">Run commands to delete the SAF certificate and keyring.</instructions>
        <weight>1</weight>
        <autoEnable>true</autoEnable>
        <template>
            <fileTemplate substitution="true">jcl/delete-userhome.jcl</fileTemplate>
            <submitAs>JCL</submitAs>
        </template>
    </step>
    
</workflow>
