/* REXX */
/*----------------------------------------------------------------*/
/* Copyright Contributors to the zOS-Workflow Project.            */
/* PDX-License-Identifier: Apache-2.0                             */
/*----------------------------------------------------------------*/

address tso

KEY_ADMIN="${instance-UKO_KEY_ADMIN_GROUP}"
KEY_CUSTODIAN1="${instance-UKO_KEY_CUSTODIAN1_GROUP}"
KEY_CUSTODIAN2="${instance-UKO_KEY_CUSTODIAN2_GROUP}"
UKO_AUDITOR="${instance-UKO_AUDITOR_GROUP}"
SAFPREFIX="${instance-SAF_PROFILE_PREFIX}"
SAF_OWNER="${instance-SAF_OWNER}"

/***********************************************************************/
/* Creating EJB Roles for key management */
/***********************************************************************/

"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.auditlog:read OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.certificates:import OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.certificates:import:untrusted OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.datasets:read OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.integrity:write OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:active:change_expiration OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:active:deactivate OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:active:install OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:active:mark_compromised OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:active:uninstall OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:active:update OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:compromised:destroy OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:compromised:install OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:compromised:uninstall OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:compromised:unmark_compromised OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:compromised:update OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:deactivated:destroy OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:deactivated:install OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:deactivated:mark_compromised OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:deactivated:reactivate OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:deactivated:uninstall OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:destroyed_compromised:remove OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:destroyed:mark_compromised OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:destroyed:remove OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:distribute OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:export OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:generate OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:non_existing:generate OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:non_existing:import OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:pre_activation:activate OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:pre_activation:change_expiration OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:pre_activation:destroy OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:pre_activation:mark_compromised OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:pre_activation:uninstall OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:pre_activation:update OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:read OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:write OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:delete OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:write:dates OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:write:exportControl OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:write:exportControl:allowedKeys:add OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:write:exportControl:allowedKeys:remove OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keys:write:tags OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keystores:read OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keystores:write OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.keystores:delete OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.logs:read OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.meta:cache-rebuild OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.meta:logs-download OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.settings:write OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.templates:read OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.templates:write OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.templates:delete OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.user:passcode:create OWNER("SAF_OWNER") UACC(NONE)"
"RDEFINE EJBROLE" SAFPREFIX".ekmf-rest-api.user:passcode:delete OWNER("SAF_OWNER") UACC(NONE)" 

/***********************************************************************/
/* granting access to the different user roles                         */
/***********************************************************************/


Say "Grant Permissions to Key Administrator" KEY_ADMIN
"PERMIT" SAFPREFIX".ekmf-rest-api.auditlog:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:active:install CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:deactivated:reactivate CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:non_existing:import CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:write CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keystores:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keystores:write CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.logs:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.settings:write CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.templates:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.templates:write CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.user:passcode:create CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"
"PERMIT" SAFPREFIX".ekmf-rest-api.user:passcode:delete CLASS(EJBROLE) ACCESS(READ) ID("KEY_ADMIN")"

Say "Grant Permissions to Key Custodian1" KEY_CUSTODIAN1
"PERMIT" SAFPREFIX".ekmf-rest-api.datasets:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:active:deactivate CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:active:mark_compromised CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:active:uninstall CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:compromised:destroy CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:compromised:uninstall CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:deactivated:destroy CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:deactivated:mark_compromised CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:deactivated:uninstall CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:destroyed:mark_compromised CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:distribute CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:generate CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:non_existing:generate CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:pre_activation:destroy CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:pre_activation:mark_compromised CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:write CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keystores:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.templates:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.certificates:import CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.certificates:import:untrusted CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.user:passcode:create CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"
"PERMIT" SAFPREFIX".ekmf-rest-api.user:passcode:delete CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN1")"

Say "Grant Permissions to Key Custodian1" KEY_CUSTODIAN2
"PERMIT" SAFPREFIX".ekmf-rest-api.datasets:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:active:deactivate CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:active:install CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:active:mark_compromised CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:active:uninstall CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:compromised:destroy CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:compromised:install CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:compromised:uninstall CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:deactivated:destroy CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:deactivated:install CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:deactivated:mark_compromised CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:deactivated:uninstall CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:destroyed:mark_compromised CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:distribute CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:pre_activation:activate CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:pre_activation:destroy CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:pre_activation:mark_compromised CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:write CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keystores:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.templates:read CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.certificates:import CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.certificates:import:untrusted CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.user:passcode:create CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"
"PERMIT" SAFPREFIX".ekmf-rest-api.user:passcode:delete CLASS(EJBROLE) ACCESS(READ) ID("KEY_CUSTODIAN2")"

Say "Grant Permissions to Key Custodian1" UKO_AUDITOR
"PERMIT" SAFPREFIX".ekmf-rest-api.auditlog:read CLASS(EJBROLE) ACCESS(READ) ID("UKO_AUDITOR")"
"PERMIT" SAFPREFIX".ekmf-rest-api.datasets:read CLASS(EJBROLE) ACCESS(READ) ID("UKO_AUDITOR")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keys:read CLASS(EJBROLE) ACCESS(READ) ID("UKO_AUDITOR")"
"PERMIT" SAFPREFIX".ekmf-rest-api.keystores:read CLASS(EJBROLE) ACCESS(READ) ID("UKO_AUDITOR")"
"PERMIT" SAFPREFIX".ekmf-rest-api.templates:read CLASS(EJBROLE) ACCESS(READ) ID("UKO_AUDITOR")"
"PERMIT" SAFPREFIX".ekmf-rest-api.user:passcode:create CLASS(EJBROLE) ACCESS(READ) ID("UKO_AUDITOR")"
"PERMIT" SAFPREFIX".ekmf-rest-api.user:passcode:delete CLASS(EJBROLE) ACCESS(READ) ID("UKO_AUDITOR")"

/* Refresh */
"SETROPTS RACLIST(EJBROLE) REFRESH"
