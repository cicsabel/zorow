<?xml version="1.0" encoding="UTF-8"?>

<!-- Declare external file containing WAS variables referenced in the following steps -->
<!DOCTYPE workflow [<!ENTITY variables SYSTEM "variable_imports.xml">
                    <!ENTITY image_properties SYSTEM "extensions/image_properties.xml">
                    ]> 
                    
<!--
/******************************************************************************/
/* Copyright Contributors to the zOS-Workflow Project.                        */
/* SPDX-License-Identifier: Apache-2.0                                        */
/******************************************************************************/
-->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../workflow/schemas/workflow_v1.xsd">
    <!--  Note: The schema workflow_v1.xsd is shipped with z/OSMF. To use the schema
          to validate this XML, modify the above schema location to point to the 
          schema in z/OSMF, or copy the schema to an appropriate location.  -->

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- UKO Provisioning : Grant access to a vault in a UKO server           -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

  <workflowInfo>
      <workflowID>uko_grantVaultAccess</workflowID>
      <workflowDescription>Grant access to a vault in a UKO server.</workflowDescription>
    <workflowVersion>1.0.0.0</workflowVersion>
        <!-- Build timestamp 2021.05.09.21.03.24 -->
      <vendor>IBM</vendor>
      <Provisioning>
          <productID>5655-EKM</productID>
          <productName>UKO</productName>
          <productVersion>V2R1+</productVersion>
          <softwareType>ukoserver</softwareType>
      </Provisioning>
  </workflowInfo>
  
  	<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--     Include variables used by the following steps     -->
	<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	&variables;
    <atCreate name="UKO_VAULT_ID" scope="instance" prompt="true" required="false"/>
    <atCreate name="UKO_VAULT_ADMIN_GROUP" scope="instance" prompt="true" required="false"/>
    <atCreate name="UKO_KEY_ADMIN_GROUP" scope="instance" prompt="true" required="false"/>
    <atCreate name="UKO_KEY_CUSTODIAN1_GROUP" scope="instance" prompt="true" required="false"/>
    <atCreate name="UKO_KEY_CUSTODIAN2_GROUP" scope="instance" prompt="true" required="false"/>
    <atCreate name="UKO_AUDITOR_GROUP" scope="instance" prompt="true" required="false"/>
    
    <step name="defineRolesVault">
        <title>Define vault-specific UKO roles</title>
        <description>Defines the vault-specific roles</description>
        <runAsUser substitution="true">$!{instance-UKO_ADMIN_SECURITY}</runAsUser>
        <approver substitution="true">$!{instance-UKO_APPROVER_SECURITY}</approver>
        <condition>
            <expression><![CDATA["1" == "1"]]></expression>
            <description>Should the step be executed, based on the UKO_VAULT_ID setting</description>
            <targetStateSet>
              <description/>
                <extendStateExpression>
                    <description>Skip if UKO_VAULT_ID == ekmfwebv2</description>
                  <expression><![CDATA[ ${instance-UKO_VAULT_ID} == "ekmfwebv2"]]></expression>
                    <targetState>Skipped</targetState>
                </extendStateExpression>
            </targetStateSet>
        </condition>        
        <variableValue name="UKO_VAULT_ID" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_VAULT_ADMIN_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_ADMIN_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_CUSTODIAN1_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_CUSTODIAN2_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_AUDITOR_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <instructions>Executes a REXX program to create EJB roles and grant access</instructions>
        <weight>1</weight>
        <autoEnable>true</autoEnable>
        <template>
            <fileTemplate substitution="true">extensions/defineRolesVault.rexx</fileTemplate>
            <submitAs maxRc="4">TSO-REXX-JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
        </template>
    </step>

    <step name="defineRolesLegacy">
        <title>Define legacy roles for EKMF V2</title>
        <description>Legacy, defines roles for EKMF Web Version 2.x before vaults were introduced. This is only executed if the vault ID is set to ekmfwebv2</description>
        <runAsUser substitution="true">$!{instance-UKO_ADMIN_SECURITY}</runAsUser>
        <approver substitution="true">$!{instance-UKO_APPROVER_SECURITY}</approver>
        <condition>
            <expression><![CDATA["1" == "1"]]></expression>
            <description>Should the step be executed, based on the UKO_VAULT_ID setting</description>
            <targetStateSet>
            <description/>
                <extendStateExpression>
                    <description>Skip if UKO_VAULT_ID != ekmfwebv2</description>
                <expression><![CDATA[ ${instance-UKO_VAULT_ID} != "ekmfwebv2"]]></expression>
                    <targetState>Skipped</targetState>
                </extendStateExpression>
            </targetStateSet>
        </condition>
        <variableValue name="UKO_KEY_ADMIN_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_CUSTODIAN1_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_CUSTODIAN2_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_AUDITOR_GROUP" scope="instance" noPromptIfSet="false" required="false"/>        
        <instructions>Executes a REXX program to create EJB roles and grant access</instructions>
        <weight>1</weight>
        <autoEnable>true</autoEnable>
        <template>
            <fileTemplate substitution="true">extensions/defineRolesLegacy.rexx</fileTemplate>
            <submitAs maxRc="4">TSO-REXX-JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
        </template>
    </step>

    <step name="optionalSteps">
        <title>Optional steps</title>
        <description>For new users or groups, you might also need to execute the following steps</description>

        <step name="defineRolesGeneral">
            <title>Define general UKO roles</title>
            <description>Defines the general roles across all vaults</description>
            <runAsUser substitution="true">$!{instance-UKO_ADMIN_SECURITY}</runAsUser>
            <approver substitution="true">$!{instance-UKO_APPROVER_SECURITY}</approver>
            <condition>
                <expression><![CDATA["1" == "1"]]></expression>
                <description>Should the step be executed, based on the UKO_VAULT_ID setting</description>
                <targetStateSet>
                  <description/>
                    <extendStateExpression>
                        <description>Skip if UKO_VAULT_ID == ekmfwebv2</description>
                      <expression><![CDATA[ ${instance-UKO_VAULT_ID} == "ekmfwebv2"]]></expression>
                        <targetState>Skipped</targetState>
                    </extendStateExpression>
                </targetStateSet>
            </condition>
            <instructions>Executes a REXX program to create EJB roles and grant access</instructions>
            <weight>1</weight>
            <autoEnable>true</autoEnable>
            <template>
                <fileTemplate substitution="true">extensions/defineRolesGeneral.rexx</fileTemplate>
                <submitAs maxRc="4">TSO-REXX-JCL</submitAs>
                <maxLrecl>1024</maxLrecl>
            </template>
        </step> 

        <step name="configureApplAccess">
            <title>Ensure everyone has APPL access</title>
            <description>Grant access to the APPL class for the specific server to all groups</description>
            <runAsUser substitution="true">$!{instance-UKO_ADMIN_SECURITY}</runAsUser>
            <approver substitution="true">$!{instance-UKO_APPROVER_SECURITY}</approver>
            <instructions substitution="true">Submit rexx exec to execute step</instructions>
            <weight>1</weight>
            <autoEnable>true</autoEnable>
            <template>
                <fileTemplate substitution="true">extensions/defineApplAccess.rexx</fileTemplate>
                <submitAs maxRc="0">TSO-REXX-JCL</submitAs>
                <maxLrecl>1024</maxLrecl>
            </template>
        </step>
    </step>

</workflow>