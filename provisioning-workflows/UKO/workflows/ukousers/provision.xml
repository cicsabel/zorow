<?xml version="1.0" encoding="UTF-8"?>

<!-- Declare external file containing WAS variables referenced in the following steps -->
<!DOCTYPE workflow [<!ENTITY image_properties SYSTEM "extensions/image_properties.xml">
                    <!ENTITY variables SYSTEM "variable_imports.xml">
                    ]> 
                    
<!--
/******************************************************************************/
/* Copyright Contributors to the zOS-Workflow Project.                        */
/* SPDX-License-Identifier: Apache-2.0                                        */
/******************************************************************************/
-->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../workflow/schemas/workflow_v1.xsd">
    <!--  Note: The schema workflow_v1.xsd is shipped with z/OSMF. To use the schema
          to validate this XML, modify the above schema location to point to the 
          schema in z/OSMF, or copy the schema to an appropriate location.  -->

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- UKO Provisioning : Provision user ids and groups                -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

  <workflowInfo>
      <workflowID>ukousers_Provision</workflowID>
      <workflowDescription>Provision user ids required for UKO</workflowDescription>
    <workflowVersion>1.0.0.0</workflowVersion>
      <vendor>IBM</vendor>
      <Provisioning>
          <productID>5655-EKM</productID>
          <productName>UKO</productName>
          <productVersion>V2R1+</productVersion>
          <softwareType>ukousers</softwareType>
      </Provisioning>
  </workflowInfo>
  
  	<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--     Include variables used by the following steps     -->
	<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	&variables;
	&image_properties;

    <!--++++++++++++++++++++++-->
    <!--   Provision Steps    -->
    <!--++++++++++++++++++++++-->  
	

    <step name="defineTechnicalUsers">
        <title>Define technical users and groups</title>
        <description>Define technical user IDs and groups</description>
        <runAsUser substitution="true">$!{instance-UKO_ADMIN_SECURITY}</runAsUser>
        <approver substitution="true">$!{instance-UKO_APPROVER_SECURITY}</approver>
        <variableValue name="UKO_AGENT_STC_USER" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_AGENT_STC_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_AGENT_CLIENT_USER" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_AGENT_CLIENT_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_SERVER_STC_USER" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_SERVER_STC_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_UNAUTHENTICATED_USER" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_UNAUTHENTICATED_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <instructions substitution="true">Submit rexx exec to execute step. The workflow is using the AUTOUID option to automatically generate a unique ID value in the OMVS segment of a user or group. If you cannot use AUTOUID, you need to replace it with a unique UID(user-identifier) for each ADDUSER or ADDGROUP statement. 
        </instructions>
        <weight>1</weight>
        <autoEnable>true</autoEnable>
        <template>
            <fileTemplate substitution="true">extensions/defineTechnicalUsers.rexx</fileTemplate>
            <submitAs maxRc="0">TSO-REXX-JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
        </template>
    </step>

    <step name="definePersonalUsers">
        <title>Define role users and groups</title>
        <description>Define users and groups</description>
        <runAsUser substitution="true">$!{instance-UKO_ADMIN_SECURITY}</runAsUser>
        <approver substitution="true">$!{instance-UKO_APPROVER_SECURITY}</approver>
        <variableValue name="UKO_VAULT_ADMIN" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_VAULT_ADMIN_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_ADMIN" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_ADMIN_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_CUSTODIAN1" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_CUSTODIAN1_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_CUSTODIAN2" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_KEY_CUSTODIAN2_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_AUDITOR" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="UKO_AUDITOR_GROUP" scope="instance" noPromptIfSet="false" required="false"/>
        <instructions substitution="true">Submit rexx exec to execute step. The workflow is using the AUTOUID option to automatically generate a unique ID value in the OMVS segment of a user or group. If you cannot use AUTOUID, you need to replace it with a unique UID(user-identifier) for each ADDUSER or ADDGROUP statement. 
        </instructions>
        <weight>1</weight>
        <autoEnable>true</autoEnable>
        <template>
            <fileTemplate substitution="true">extensions/definePersonalUsers.rexx</fileTemplate>
            <submitAs maxRc="0">TSO-REXX-JCL</submitAs>
            <maxLrecl>1024</maxLrecl>
        </template>
    </step>

</workflow>