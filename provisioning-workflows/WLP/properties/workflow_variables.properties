################################################################################
# Copyright Contributors to the zOS-Workflow Project.                          #
# SPDX-License-Identifier: Apache-2.0                                          #
################################################################################

#------------------
# Basic variables
#------------------

# The path to the Liberty installation.
WLP_INSTALL_DIR :

# The Java home path
JAVA_HOME :

# The absolute path to a directory to store temporary files created at runtime.
# If provisioning on a remote system in a sysplex, this directory must be shared.
TEMP_DIR : /tmp

# The absolute path to a directory containing applications to install in a provisioned server
APPS_DIR :


#---------------------------
# Network resource options
#---------------------------

# Flag to indicate whether or not to use z/OSMF's DVIPA support. Valid options: TRUE or FALSE.
# If TRUE, each provisioned server will have its own unique IP address and the default Liberty ports 9080 and 9443 will be used.
# If FALSE, all provisioned servers will use the same IP address as indicated by the IP_ADDRESS variable below and unique
# ports will be allocated.
WLP_ENABLE_DVIPA : TRUE

# The existing IP address on this LPAR to be used for all provisioned servers. This must be set if WLP_ENABLE_DVIPA is set to FALSE.
IP_ADDRESS :

#---------------------
# File system options
#---------------------

# The absolute path to the directory where server instances will be provisioned. If blank, servers will be provisioned in the
# requesting users' home directory. When provisioning on a remote system in a sysplex, this directory must be shared.
MOUNT_POINT :

# Flag to indicate whether a new file system will be created for each provisioned instance. The new file system will be
# created based on a unique z/OSMF provided name.
WLP_CREATE_ZFS : TRUE

VOLUME :
PRIMARY_CYLINDERS : 300
SECONDARY_CYLINDERS : 10

# The name of the high level qualifier to use when creating ZFSs.
FILE_SYSTEM_HLQ :

#---------------------------
# SAF domain access options
#---------------------------

# The unauthenticated user id to use when setting up SAF security for the provisioned instances.
# IZUGUEST is the unauthenticated user id used by the z/OSMF server and for convenience can be
# shared among provisioned instances. If desired, another unauthenticated user id can be created
# and specified here.
UNAUTH_USER : IZUGUEST

#-------------------------------------------------
# SAF certificate creation for SSL authentication
#-------------------------------------------------

# Flag to indicate whether to use SAF certificates and keyrings for SSL authentication or the standard java file-based certificates.
# Valid options: TRUE or FALSE. If TRUE, SAF certificates and keyrings will be created for each provisioned server with a one year expiration date.
# If FALSE, the Liberty server will create java file-based certificates at initial startup.
WLP_ENABLE_SSL_SAF_CERTIFICATES : FALSE

# Optional. If WLP_ENABLE_SSL_SAF_CERTIFICATES is set to TRUE, this variable can be set with the name of a certificate to act as the
# Certificate Authority to sign all certificates created for the provisioned instances.
SIGN_WITH :

# The date when newly created certificates will expire (yyyy-mm-dd). This is optional. If not set, the 1 year default expiration will be used.
# Note that this date must be before the expiration date of the signing certificate, if set.
CERTIFICATE_EXPIRATION_DATE:

#----------------------
# Server start options
#----------------------

# Flag to indicate whether or not to start the server automatically after provisioning.
START_INSTANCE : TRUE

# Flag to indicate whether the server will be started as a z/OS started task or as a USS process. If TRUE, the server will be started
# as a started task. If FASLE or empty, the server will be started as a USS process.
START_SERVER_AS_STARTED_TASK : FALSE

# The proclib dataset
PROCLIB :

# The name of the console to issue console start and stop commands.
# If the default 'defcn' is used, z/OSMF will use the console name "<CONSOLE_RUN_AS_ID>CN"
CONSOLE_NAME : defcn

#-----------------------------
# DB2 connection type options
#-----------------------------

# The DB2 connection type when DB2 binding is requested. Valid values are 2 or 4.
DB2_CONNECTION_TYPE : 2

#---------------------------
# WLM resource options
#---------------------------

# Flag to indicate whether or not to create classification rule in WLM service definition
DEFINE_WLM_RULE : FALSE

#-----------------------------------------
# Approval and run-as user id definitions
#-----------------------------------------

# The user ids for approving and executing console commands
# This is only used to start and stop a server when the command port is disabled
CONSOLE_RUN_AS_ID :
CONSOLE_APPROVAL_ID :

# The user ids for approving and executing SAF related security tasks such as creating certificates and SAF profiles for server access
SECURITY_RUN_AS_ID :
SECURITY_APPROVAL_ID :

# The user ids for approving and executing proclib additions
PROCLIB_RUN_AS_ID :
PROCLIB_APPROVAL_ID :

# The user ids for approving and creating/mounting file systems
MOUNT_RUN_AS_ID :
MOUNT_APPROVAL_ID :
